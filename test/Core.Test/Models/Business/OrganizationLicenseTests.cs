using System.Text.Json;
using Bit.Core.Billing.Licenses.OrganizationLicenses;
using Bit.Core.Services;
using Bit.Core.Utilities;
using Bit.Test.Common.AutoFixture.Attributes;
using NSubstitute;
using Xunit;

namespace Bit.Core.Test.Models.Business;

public class OrganizationLicenseTests
{
    /// <summary>
    /// Verifies that when the license file is loaded from disk using the current OrganizationLicense class,
    /// its hash does not change.
    /// This guards against the risk that properties added in later versions are accidentally included in the hash,
    /// or that a property is added without incrementing the version number.
    /// </summary>
    [Theory]
    [BitAutoData(OrganizationLicense.CurrentLicenseFileVersion)] // Previous version (this property is 1 behind)
    [BitAutoData(OrganizationLicense.CurrentLicenseFileVersion + 1)] // Current version
    public void OrganizationLicense_LoadFromDisk_HashDoesNotChange(int licenseVersion)
    {
        var license = OrganizationLicenseFileFixtures.GetVersion(licenseVersion);

        // Compare the hash loaded from the json to the hash generated by the current class
        Assert.Equal(Convert.FromBase64String(license.Hash), license.EncodedHash);
    }

    /// <summary>
    /// Helper used to generate a new json string to be added in OrganizationLicenseFileFixtures.
    /// Uncomment [Fact], run the test and copy the value of the `result` variable into OrganizationLicenseFileFixtures,
    /// following the instructions in that class.
    /// </summary>
    // [Fact]
    private void GenerateLicenseFileJsonString()
    {
        var organization = OrganizationLicenseFileFixtures.OrganizationFactory();
        var licensingService = Substitute.For<ILicensingService>();
        var installationId = new Guid(OrganizationLicenseFileFixtures.InstallationId);

        // var license = new OrganizationLicense(organization, null, installationId, licensingService);
        var license = new OrganizationLicense
        {
            Version = OrganizationLicense.CurrentLicenseFileVersion + 1,
            LicenseKey = organization.LicenseKey,
            InstallationId = installationId,
            Id = organization.Id,
            Name = organization.Name,
            BillingEmail = organization.BillingEmail,
            BusinessName = organization.BusinessName,
            Enabled = organization.Enabled,
            Plan = organization.Plan,
            PlanType = organization.PlanType,
            Seats = organization.Seats,
            MaxCollections = organization.MaxCollections,
            UsePolicies = organization.UsePolicies,
            UseSso = organization.UseSso,
            UseKeyConnector = organization.UseKeyConnector,
            UseScim = organization.UseScim,
            UseGroups = organization.UseGroups,
            UseEvents = organization.UseEvents,
            UseDirectory = organization.UseDirectory,
            UseTotp = organization.UseTotp,
            Use2fa = organization.Use2fa,
            UseApi = organization.UseApi,
            UseResetPassword = organization.UseResetPassword,
            MaxStorageGb = organization.MaxStorageGb,
            SelfHost = organization.SelfHost,
            UsersGetPremium = organization.UsersGetPremium,
            UseCustomPermissions = organization.UseCustomPermissions,
            UsePasswordManager = organization.UsePasswordManager,
            UseSecretsManager = organization.UseSecretsManager,
            SmSeats = organization.SmSeats,
            SmServiceAccounts = organization.SmServiceAccounts,
            LimitCollectionCreationDeletion = organization.LimitCollectionCreationDeletion,
            AllowAdminAccessToAllCollectionItems = organization.AllowAdminAccessToAllCollectionItems,
            Issued = DateTime.UtcNow,
            Expires = DateTime.UtcNow.AddDays(7),
            Refresh = DateTime.UtcNow.AddDays(7),
            Trial = true,
        };

        var result = JsonSerializer.Serialize(license, JsonHelpers.Indented).Replace("\"", "'");
        // Put a break after this line, then copy and paste the value of `result` into OrganizationLicenseFileFixtures
    }
}
